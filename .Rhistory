library("readxl")
datos = read.csv("./Modela2/Agrupamiento2.csv",na.strings = c("","NA"))
print(nrow(datos))
datos
datos = read.csv("./Modela2/Agrupamiento2.csv",na.strings = c("","NA"),sep=";")
datos
datos = read.csv("./Modela2/Agrupamiento2.csv",na.strings = c("","NA"),sep=";",header = FALSE)
datos
colnames(datos) <- c("Order Number","Inspection Start","Inspection End","Material","Supplier","Units Inspected","Units Defective","Time")
print(nrow(datos))
datos
print(nrow(datos))
unique_pairs = read.csv("./Modela2/Parejas2",na.strings = c("","NA"),sep=";",header = FALSE)
unique_pairs = read.csv("./Modela2/Parejas2.csv",na.strings = c("","NA"),sep=";",header = FALSE)
colnames(unique_pairs) <- c("Material","Supplier")
unique_pairs
print(nrow(unique_pairs))
distributions = c("norm","gamma", "weibull")
names(distributions) = c("Normal","Gamma","Weibull")
excel <- matrix(, nrow = nrow(unique_pairs) , ncol = 7)
colnames(excel) <- c("Material","Supplier","Distribucion","Val1Name","Val1","Val2Name","Val2")
unique_pairs
for(i in 1:dim(unique_pairs)[1]){
material =  unique_pairs[i,1]
supplier = unique_pairs[i,2]
pair_values =  filter(datos, Material == material & Supplier== supplier )
choosen_dist <- distChoose(pair_values$Time, alpha = 0.05, method = "sw",
choices = c("gamma","weibull","norm"), est.arg.list = NULL,
warn= TRUE, keep.data = TRUE, data.name = NULL,
parent.of.data = NULL, subset.expression = NULL)
if(choosen_dist$decision=="Nonparametric"){
choosen_dist$decision="Normal"
}
dist_name = distributions[[choosen_dist$decision]]
valor_de_ajuste <- fitdist(pair_values$Time,dist_name)
excel[i,1] <- sprintf( "%s", material)
excel[i,2] <- sprintf( "%s", supplier)
excel[i,3] <- choosen_dist$decision
excel[i,4] <- names(valor_de_ajuste[[1]][1])
excel[i,5] <- valor_de_ajuste[[1]][1]
excel[i,6] <- names(valor_de_ajuste[[1]][2])
excel[i,7] <- valor_de_ajuste[[1]][2]
cat(sprintf("Preja %s - %s => %s \n",material,supplier,choosen_dist$decision))
}
write.xlsx(excel,"Estadisticas_QualityData.xlsx",sheetName = "Resultados - Processing Data",
col.names = TRUE, row.names = FALSE, append = FALSE)
setwd("~/Documents/Tareas/Modela 2/MYS2_Proyecto_G21")
require(dplyr)
require(distChoose)
require(EnvStats)
library("fitdistrplus")
library("xlsx")
datos = read.csv("./Modela2/Agrupamiento1.csv",na.strings = c("","NA"),sep=";",header = FALSE)
print(nrow(datos))
datos = read.csv("./Modela2/Agrupamiento1.csv",na.strings = c("","NA"),sep=";",header = FALSE)
colnames(datos) <- c("Start Time","End Time","Product Type","Station","Scrap Used","Time")
colnames(datos) <- c("Product Type","Station","Scrap Used","Time")
print(nrow(datos))
unique_pairs = read.csv("./Modela2/Parejas1.csv",na.strings = c("","NA"),sep=";",header = FALSE)
unique_pairs
colnames(unique_pairs) <- c("Product Type","Station")
unique_pairs
print(nrow(unique_pairs))
distributions = c("norm","gamma", "weibull")
names(distributions) = c("Normal","Gamma","Weibull")
distributions
excel <- matrix(, nrow = nrow(unique_pairs) , ncol = 7)
colnames(excel) <- c("Estacion","Tipo_de_Producto","Distribucion","Val1Name","Val1","Val2Name","Val2")
typeof(datos$Time)
for(i in 1:dim(unique_pairs)[1]){
product_type =  unique_pairs[i,1]
station = unique_pairs[i,2]
pair_values =  filter(datos, Product.Type == product_type & Station==station & Time>0 )
choosen_dist <- distChoose(pair_values$Time, alpha = 0.05, method = "sw",
choices = c("gamma","weibull","norm"), est.arg.list = NULL,
warn= TRUE, keep.data = TRUE, data.name = NULL,
parent.of.data = NULL, subset.expression = NULL)
if(choosen_dist$decision=="Nonparametric"){
choosen_dist$decision="Normal"
}
dist_name = distributions[[choosen_dist$decision]]
valor_de_ajuste <- fitdist(pair_values$Time,dist_name)
excel[i,1] <- sprintf( "%s", station)
excel[i,2] <- sprintf( "%s", product_type)
excel[i,3] <- choosen_dist$decision
excel[i,4] <- names(valor_de_ajuste[[1]][1])
excel[i,5] <- valor_de_ajuste[[1]][1]
excel[i,6] <- names(valor_de_ajuste[[1]][2])
excel[i,7] <- valor_de_ajuste[[1]][2]
cat(sprintf("Preja %s - %s => %s \n",product_type,station,choosen_dist$decision))
}
excel
print(nrow(excel))
write.xlsx(excel,"Estadisticas_Servidores.xlsx",sheetName = "Resultados - Processing Data",
col.names = TRUE, row.names = FALSE, append = FALSE
)
datos = read.csv("./Modela2/Agrupamiento1.csv",na.strings = c("","NA"),sep=";",header = FALSE)
colnames(datos) <- c("Product Type","Station","Scrap Used","Time")
datos
print(nrow(datos))
unique_pairs = read.csv("./Modela2/Parejas1.csv",na.strings = c("","NA"),sep=";",header = FALSE)
unique_pairs
colnames(unique_pairs) <- c("Product Type","Station")
unique_pairs
print(nrow(unique_pairs))
distributions = c("norm","gamma", "weibull")
names(distributions) = c("Normal","Gamma","Weibull")
distributions
excel <- matrix(, nrow = nrow(unique_pairs) , ncol = 7)
colnames(excel) <- c("Estacion","Tipo_de_Producto","Distribucion","Val1Name","Val1","Val2Name","Val2")
typeof(datos$Time)
for(i in 1:dim(unique_pairs)[1]){
product_type =  unique_pairs[i,1]
station = unique_pairs[i,2]
pair_values =  filter(datos, Product.Type == product_type & Station==station & Time>0 )
choosen_dist <- distChoose(pair_values$Time, alpha = 0.05, method = "sw",
choices = c("gamma","weibull","norm"), est.arg.list = NULL,
warn= TRUE, keep.data = TRUE, data.name = NULL,
parent.of.data = NULL, subset.expression = NULL)
if(choosen_dist$decision=="Nonparametric"){
choosen_dist$decision="Normal"
}
dist_name = distributions[[choosen_dist$decision]]
valor_de_ajuste <- fitdist(pair_values$Time,dist_name)
excel[i,1] <- sprintf( "%s", station)
excel[i,2] <- sprintf( "%s", product_type)
excel[i,3] <- choosen_dist$decision
excel[i,4] <- names(valor_de_ajuste[[1]][1])
excel[i,5] <- valor_de_ajuste[[1]][1]
excel[i,6] <- names(valor_de_ajuste[[1]][2])
excel[i,7] <- valor_de_ajuste[[1]][2]
cat(sprintf("Preja %s - %s => %s \n",product_type,station,choosen_dist$decision))
}
unique_pairs
datos
datos = read.csv("./Modela2/Agrupamiento1.csv",na.strings = c("","NA"),sep=";",header = FALSE)
datos
colnames(datos) <- c("Product.Type","Station","Scrap Used","Time")
print(nrow(datos))
datos
print(nrow(datos))
#unique_pairs = read.xlsx("./Modela2/Final.xlsx", 4, header=FALSE)
unique_pairs = read.csv("./Modela2/Parejas1.csv",na.strings = c("","NA"),sep=";",header = FALSE)
colnames(unique_pairs) <- c("Product.Type","Station")
unique_pairs$
datos = read.csv("./Modela2/Agrupamiento1.csv",na.strings = c("","NA"),sep=";",header = FALSE)
datos
colnames(datos) <- c("Product.Type","Station","Scrap Used","Time")
print(nrow(datos))
#unique_pairs = read.xlsx("./Modela2/Final.xlsx", 4, header=FALSE)
unique_pairs = read.csv("./Modela2/Parejas1.csv",na.strings = c("","NA"),sep=";",header = FALSE)
colnames(unique_pairs) <- c("Product.Type","Station")
unique_pairs$
# -l
print(nrow(unique_pairs))
distributions = c("norm","gamma", "weibull")
names(distributions) = c("Normal","Gamma","Weibull")
distributions
excel <- matrix(, nrow = nrow(unique_pairs) , ncol = 7)
colnames(excel) <- c("Estacion","Tipo_de_Producto","Distribucion","Val1Name","Val1","Val2Name","Val2")
typeof(datos$Time)
for(i in 1:dim(unique_pairs)[1]){
product_type =  unique_pairs[i,1]
station = unique_pairs[i,2]
pair_values =  filter(datos, Product.Type == product_type & Station==station & Time>0 )
choosen_dist <- distChoose(pair_values$Time, alpha = 0.05, method = "sw",
choices = c("gamma","weibull","norm"), est.arg.list = NULL,
warn= TRUE, keep.data = TRUE, data.name = NULL,
parent.of.data = NULL, subset.expression = NULL)
if(choosen_dist$decision=="Nonparametric"){
choosen_dist$decision="Normal"
}
dist_name = distributions[[choosen_dist$decision]]
valor_de_ajuste <- fitdist(pair_values$Time,dist_name)
excel[i,1] <- sprintf( "%s", station)
excel[i,2] <- sprintf( "%s", product_type)
excel[i,3] <- choosen_dist$decision
excel[i,4] <- names(valor_de_ajuste[[1]][1])
excel[i,5] <- valor_de_ajuste[[1]][1]
excel[i,6] <- names(valor_de_ajuste[[1]][2])
excel[i,7] <- valor_de_ajuste[[1]][2]
cat(sprintf("Preja %s - %s => %s \n",product_type,station,choosen_dist$decision))
}
excel
print(nrow(excel))
write.xlsx(excel,"Estadisticas_Servidores.xlsx",sheetName = "Resultados - Processing Data",
col.names = TRUE, row.names = FALSE, append = FALSE
)
hist(pair_values)
hist(pair_values$Time)
hist(pair_values$Time, xlab="Time")
for(i in 1:dim(unique_pairs)[1]){
product_type =  unique_pairs[i,1]
station = unique_pairs[i,2]
pair_values =  filter(datos, Product.Type == product_type & Station==station & Time>0 )
choosen_dist <- distChoose(pair_values$Time, alpha = 0.05, method = "sw",
choices = c("gamma","weibull","norm"), est.arg.list = NULL,
warn= TRUE, keep.data = TRUE, data.name = NULL,
parent.of.data = NULL, subset.expression = NULL)
if(choosen_dist$decision=="Nonparametric"){
choosen_dist$decision="Normal"
}
dist_name = distributions[[choosen_dist$decision]]
valor_de_ajuste <- fitdist(pair_values$Time,dist_name)
hist(pair_values$Time, xlab="Time")
excel[i,1] <- sprintf( "%s", station)
excel[i,2] <- sprintf( "%s", product_type)
excel[i,3] <- choosen_dist$decision
excel[i,4] <- names(valor_de_ajuste[[1]][1])
excel[i,5] <- valor_de_ajuste[[1]][1]
excel[i,6] <- names(valor_de_ajuste[[1]][2])
excel[i,7] <- valor_de_ajuste[[1]][2]
cat(sprintf("Preja %s - %s => %s \n",product_type,station,choosen_dist$decision))
}
file_name="prueba.png"
hist(pair_values$Time, xlab="Time")
system(paste("open ",file_name), wait=FALSE)
file_name="prueba.png"
png(file=file_name)
hist(pair_values$Time, xlab="Time")
dev.off()
system(paste("open ",file_name), wait=FALSE)
file_name="prueba.png"
png(file=file_name)
hist(pair_values$Time, xlab="Time")
dev.off()
system(paste("open ",file_name), wait=FALSE)
file_name="prueba.png"
png(file=file_name)
hist(pair_values$Time, xlab="Time" , main="Histograma")
dev.off()
system(paste("open ",file_name), wait=FALSE)
if(i%%10 ==0){
file_name=sprintf("Pareja %s - %s .png",product_type,station)
png(file=file_name)
hist(pair_values$Time, xlab="Time" , main=file_name)
dev.off()
system(paste("open ",file_name), wait=FALSE)
}
file_name=sprintf("Pareja %s - %s .png",product_type,station)
png(file=file_name)
hist(pair_values$Time, xlab="Time" , main=file_name)
dev.off()
system(paste("open ",file_name), wait=FALSE)
for(i in 1:dim(unique_pairs)[1]){
product_type =  unique_pairs[i,1]
station = unique_pairs[i,2]
pair_values =  filter(datos, Product.Type == product_type & Station==station & Time>0 )
choosen_dist <- distChoose(pair_values$Time, alpha = 0.05, method = "sw",
choices = c("gamma","weibull","norm"), est.arg.list = NULL,
warn= TRUE, keep.data = TRUE, data.name = NULL,
parent.of.data = NULL, subset.expression = NULL)
if(choosen_dist$decision=="Nonparametric"){
choosen_dist$decision="Normal"
}
dist_name = distributions[[choosen_dist$decision]]
valor_de_ajuste <- fitdist(pair_values$Time,dist_name)
excel[i,1] <- sprintf( "%s", station)
excel[i,2] <- sprintf( "%s", product_type)
excel[i,3] <- choosen_dist$decision
excel[i,4] <- names(valor_de_ajuste[[1]][1])
excel[i,5] <- valor_de_ajuste[[1]][1]
excel[i,6] <- names(valor_de_ajuste[[1]][2])
excel[i,7] <- valor_de_ajuste[[1]][2]
if(i%%10 ==0){
file_name=sprintf("Pareja %s - %s .png",product_type,station)
png(file=file_name)
hist(pair_values$Time, xlab="Time" , main=file_name)
dev.off()
system(paste("open ",file_name), wait=FALSE)
}
cat(sprintf("Preja %s - %s => %s \n",product_type,station,choosen_dist$decision))
}
file_name=sprintf("Pareja-%s-%s.png",product_type,station)
png(file=file_name)
hist(pair_values$Time, xlab="Time" , main=file_name)
dev.off()
system(paste("open ",file_name), wait=FALSE)
file_name=sprintf("Pareja-%s-%s-%s.png",product_type,station,choosen_dist$decision)
png(file=file_name)
hist(pair_values$Time, xlab="Time" , main=file_name)
dev.off()
system(paste("open ",file_name), wait=FALSE)
for(i in 1:dim(unique_pairs)[1]){
product_type =  unique_pairs[i,1]
station = unique_pairs[i,2]
pair_values =  filter(datos, Product.Type == product_type & Station==station & Time>0 )
choosen_dist <- distChoose(pair_values$Time, alpha = 0.05, method = "sw",
choices = c("gamma","weibull","norm"), est.arg.list = NULL,
warn= TRUE, keep.data = TRUE, data.name = NULL,
parent.of.data = NULL, subset.expression = NULL)
if(choosen_dist$decision=="Nonparametric"){
choosen_dist$decision="Normal"
}
dist_name = distributions[[choosen_dist$decision]]
valor_de_ajuste <- fitdist(pair_values$Time,dist_name)
excel[i,1] <- sprintf( "%s", station)
excel[i,2] <- sprintf( "%s", product_type)
excel[i,3] <- choosen_dist$decision
excel[i,4] <- names(valor_de_ajuste[[1]][1])
excel[i,5] <- valor_de_ajuste[[1]][1]
excel[i,6] <- names(valor_de_ajuste[[1]][2])
excel[i,7] <- valor_de_ajuste[[1]][2]
if(i%%10 ==0){
file_name=sprintf("Pareja-%s-%s-%s.png",product_type,station,choosen_dist$decision)
png(file=file_name)
hist(pair_values$Time, xlab="Time" , main=file_name)
dev.off()
system(paste("open ",file_name), wait=FALSE)
}
cat(sprintf("Preja %s - %s => %s \n",product_type,station,choosen_dist$decision))
}
#install.packages("readxl")
#options(java.parameters = "-Xmx2000m")
require(dplyr)
require(distChoose)
require(EnvStats)
library("fitdistrplus")
library("xlsx")
library("readxl")
datos = read.csv("./Modela2/Agrupamiento2.csv",na.strings = c("","NA"),sep=";",header = FALSE)
colnames(datos) <- c("Order Number","Inspection Start","Inspection End","Material","Supplier","Units Inspected","Units Defective","Time")
print(nrow(datos))
unique_pairs = read.csv("./Modela2/Parejas2.csv",na.strings = c("","NA"),sep=";",header = FALSE)
colnames(unique_pairs) <- c("Material","Supplier")
unique_pairs
print(nrow(unique_pairs))
distributions = c("norm","gamma", "weibull")
names(distributions) = c("Normal","Gamma","Weibull")
excel <- matrix(, nrow = nrow(unique_pairs) , ncol = 7)
colnames(excel) <- c("Material","Supplier","Distribucion","Val1Name","Val1","Val2Name","Val2")
unique_pairs
print(nrow(unique_pairs))
distributions = c("norm","gamma", "weibull")
names(distributions) = c("Normal","Gamma","Weibull")
excel <- matrix(, nrow = nrow(unique_pairs) , ncol = 7)
colnames(excel) <- c("Material","Supplier","Distribucion","Val1Name","Val1","Val2Name","Val2")
unique_pairs
for(i in 1:dim(unique_pairs)[1]){
material =  unique_pairs[i,1]
supplier = unique_pairs[i,2]
pair_values =  filter(datos, Material == material & Supplier== supplier )
choosen_dist <- distChoose(pair_values$Time, alpha = 0.05, method = "sw",
choices = c("gamma","weibull","norm"), est.arg.list = NULL,
warn= TRUE, keep.data = TRUE, data.name = NULL,
parent.of.data = NULL, subset.expression = NULL)
if(choosen_dist$decision=="Nonparametric"){
choosen_dist$decision="Normal"
}
dist_name = distributions[[choosen_dist$decision]]
valor_de_ajuste <- fitdist(pair_values$Time,dist_name)
if(i%%3 ==0){
file_name=sprintf("Pareja-%s-%s-%s.png",material,supplier,choosen_dist$decision)
png(file=file_name)
hist(pair_values$Time, xlab="Time" , main=file_name)
dev.off()
system(paste("open ",file_name), wait=FALSE)
}
excel[i,1] <- sprintf( "%s", material)
excel[i,2] <- sprintf( "%s", supplier)
excel[i,3] <- choosen_dist$decision
excel[i,4] <- names(valor_de_ajuste[[1]][1])
excel[i,5] <- valor_de_ajuste[[1]][1]
excel[i,6] <- names(valor_de_ajuste[[1]][2])
excel[i,7] <- valor_de_ajuste[[1]][2]
cat(sprintf("Preja %s - %s => %s \n",material,supplier,choosen_dist$decision))
}
for(i in 1:dim(unique_pairs)[1]){
material =  unique_pairs[i,1]
supplier = unique_pairs[i,2]
pair_values =  filter(datos, Material == material & Supplier== supplier )
choosen_dist <- distChoose(pair_values$Time, alpha = 0.05, method = "sw",
choices = c("gamma","weibull","norm"), est.arg.list = NULL,
warn= TRUE, keep.data = TRUE, data.name = NULL,
parent.of.data = NULL, subset.expression = NULL)
if(choosen_dist$decision=="Nonparametric"){
choosen_dist$decision="Normal"
}
dist_name = distributions[[choosen_dist$decision]]
valor_de_ajuste <- fitdist(pair_values$Time,dist_name)
if(i%%3 ==0){
file_name=sprintf("Pareja-%s-%s-%s.png",supplier,material,choosen_dist$decision)
png(file=file_name)
hist(pair_values$Time, xlab="Time" , main=file_name)
dev.off()
system(paste("open ",file_name), wait=FALSE)
}
excel[i,1] <- sprintf( "%s", material)
excel[i,2] <- sprintf( "%s", supplier)
excel[i,3] <- choosen_dist$decision
excel[i,4] <- names(valor_de_ajuste[[1]][1])
excel[i,5] <- valor_de_ajuste[[1]][1]
excel[i,6] <- names(valor_de_ajuste[[1]][2])
excel[i,7] <- valor_de_ajuste[[1]][2]
cat(sprintf("Preja %s - %s => %s \n",material,supplier,choosen_dist$decision))
}
file_name=sprintf("Pareja-%s-%s-%s.png",supplier,material,choosen_dist$decision)
print(file_name)
png(file=file_name)
hist(pair_values$Time, xlab="Time" , main=file_name)
dev.off()
system(paste("open ",file_name), wait=FALSE)
file_name=sprintf("Pareja-%i-%s.png",i,choosen_dist$decision)
print(file_name)
png(file=file_name)
hist(pair_values$Time, xlab="Time" , main=file_name)
dev.off()
system(paste("open ",file_name), wait=FALSE)
for(i in 1:dim(unique_pairs)[1]){
material =  unique_pairs[i,1]
supplier = unique_pairs[i,2]
pair_values =  filter(datos, Material == material & Supplier== supplier )
choosen_dist <- distChoose(pair_values$Time, alpha = 0.05, method = "sw",
choices = c("gamma","weibull","norm"), est.arg.list = NULL,
warn= TRUE, keep.data = TRUE, data.name = NULL,
parent.of.data = NULL, subset.expression = NULL)
if(choosen_dist$decision=="Nonparametric"){
choosen_dist$decision="Normal"
}
dist_name = distributions[[choosen_dist$decision]]
valor_de_ajuste <- fitdist(pair_values$Time,dist_name)
if(i%%3 ==0){
file_name=sprintf("Pareja-%i-%s.png",i,choosen_dist$decision)
print(file_name)
png(file=file_name)
hist(pair_values$Time, xlab="Time" , main=file_name)
dev.off()
system(paste("open ",file_name), wait=FALSE)
}
excel[i,1] <- sprintf( "%s", material)
excel[i,2] <- sprintf( "%s", supplier)
excel[i,3] <- choosen_dist$decision
excel[i,4] <- names(valor_de_ajuste[[1]][1])
excel[i,5] <- valor_de_ajuste[[1]][1]
excel[i,6] <- names(valor_de_ajuste[[1]][2])
excel[i,7] <- valor_de_ajuste[[1]][2]
cat(sprintf("Preja %s - %s => %s \n",material,supplier,choosen_dist$decision))
}
for(i in 1:dim(unique_pairs)[1]){
material =  unique_pairs[i,1]
supplier = unique_pairs[i,2]
pair_values =  filter(datos, Material == material & Supplier== supplier )
choosen_dist <- distChoose(pair_values$Time, alpha = 0.05, method = "sw",
choices = c("gamma","weibull","norm"), est.arg.list = NULL,
warn= TRUE, keep.data = TRUE, data.name = NULL,
parent.of.data = NULL, subset.expression = NULL)
if(choosen_dist$decision=="Nonparametric"){
choosen_dist$decision="Normal"
}
dist_name = distributions[[choosen_dist$decision]]
valor_de_ajuste <- fitdist(pair_values$Time,dist_name)
if(i%%2 ==0){
file_name=sprintf("Pareja-%i-%s.png",i,choosen_dist$decision)
print(file_name)
png(file=file_name)
hist(pair_values$Time, xlab="Time" , main=file_name)
dev.off()
system(paste("open ",file_name), wait=FALSE)
}
excel[i,1] <- sprintf( "%s", material)
excel[i,2] <- sprintf( "%s", supplier)
excel[i,3] <- choosen_dist$decision
excel[i,4] <- names(valor_de_ajuste[[1]][1])
excel[i,5] <- valor_de_ajuste[[1]][1]
excel[i,6] <- names(valor_de_ajuste[[1]][2])
excel[i,7] <- valor_de_ajuste[[1]][2]
cat(sprintf("Preja %s - %s => %s \n",material,supplier,choosen_dist$decision))
}
setwd("~/Documents/Tareas/Modela 2/MYS2_Proyecto_G21")
require(dplyr)
require(distChoose)
require(EnvStats)
library("fitdistrplus")
library("xlsx")
library("readxl")
raw_data = read.xlsx("DataFile.xlsx", 8, header=TRUE)
raw_data$Time = raw_data$Reception.Datetime - raw_data$Order.Datetime
datos = na.omit(raw_data)
datos$Time = as.numeric(datos$Time) * 100
materials_and_suppliers = datos[,c("Material","Supplier.Name")]
print(nrow(materials_and_suppliers))
unique_pairs = materials_and_suppliers %>% distinct(Material,Supplier.Name)
print(nrow(unique_pairs))
distributions = c("norm","gamma", "weibull")
names(distributions) = c("Normal","Gamma","Weibull")
excel <- matrix(, nrow = nrow(unique_pairs) , ncol = 7)
colnames(excel) <- c("Material","Supplier","Distribucion","Val1Name","Val1","Val2Name","Val2")
unique_pairs
for(i in 1:dim(unique_pairs)[1]){
material =  unique_pairs[i,1]
supplier = unique_pairs[i,2]
pair_values =  filter(datos, Material == material & Supplier.Name == supplier )
choosen_dist <- distChoose(pair_values$Time, alpha = 0.05, method = "sw",
choices = c("gamma","weibull","norm"), est.arg.list = NULL,
warn= TRUE, keep.data = TRUE, data.name = NULL,
parent.of.data = NULL, subset.expression = NULL)
if(choosen_dist$decision=="Nonparametric"){
choosen_dist$decision="Normal"
}
dist_name = distributions[[choosen_dist$decision]]
valor_de_ajuste <- fitdist(pair_values$Time,dist_name)
excel[i,1] <- sprintf( "%s", material)
excel[i,2] <- sprintf( "%s", supplier)
excel[i,3] <- choosen_dist$decision
excel[i,4] <- names(valor_de_ajuste[[1]][1])
excel[i,5] <- valor_de_ajuste[[1]][1]
excel[i,6] <- names(valor_de_ajuste[[1]][2])
excel[i,7] <- valor_de_ajuste[[1]][2]
cat(sprintf("Preja %s - %s => %s \n",material,supplier,choosen_dist$decision))
}
write.xlsx(excel,"Estadisticas_SupplierData.xlsx",sheetName = "Resultados - Processing Data",
col.names = TRUE, row.names = FALSE, append = FALSE)
