write.xlsx(excel,"Estadisticas_Servidores.xlsx",sheetName = "Resultados - Processing Data",
col.names = TRUE, row.names = FALSE, append = FALSE
)
require(dplyr)
require(distChoose)
require(EnvStats)
library("fitdistrplus")
library("xlsx")
raw_data = read.csv("ProcessingData.csv",na.strings = c("","NA"))
print(nrow(raw_data))
datos = na.omit(raw_data)
print(nrow(datos))
products_and_stations = datos[,c("Product.Type","Station")]
print(nrow(products_and_stations))
unique_pairs = products_and_stations %>% distinct(Product.Type,Station)
print(nrow(unique_pairs))
distributions = c("norm","gamma", "weibull")
names(distributions) = c("Normal","Gamma","Weibull")
distributions
x =
x
cat(sprintf(">> %s <<< \n",x))
excel <- matrix(, nrow = nrow(unique_pairs) , ncol = 7)
colnames(excel) <- c("Estacion","Tipo_de_Producto","Distribucion","Val1Name","Val1","Val2Name","Val2")
for(i in 1:dim(unique_pairs)[1]){
product_type =  unique_pairs[i,1]
station = unique_pairs[i,2]
pair_values =  filter(datos, Product.Type == product_type & Station==station )
choosen_dist <- distChoose(pair_values$Time, alpha = 0.05, method = "sw",
choices = c("gamma","weibull","norm"), est.arg.list = NULL,
warn= TRUE, keep.data = TRUE, data.name = NULL,
parent.of.data = NULL, subset.expression = NULL)
if(choosen_dist$decision=="Nonparametric"){
choosen_dist$decision="Normal"
}
dist_name = distributions[[choosen_dist$decision]]
valor_de_ajuste <- fitdist(pair_values$Time,dist_name)
excel[i,1] <- sprintf( "%s", station)
excel[i,2] <- sprintf( "%s", product_type)
excel[i,3] <- choosen_dist$decision
excel[i,4] <- names(valor_de_ajuste[[1]][1])
excel[i,5] <- valor_de_ajuste[[1]][1]
excel[i,6] <- names(valor_de_ajuste[[1]][2])
excel[i,7] <- valor_de_ajuste[[1]][2]
cat(sprintf("Preja %s - %s => %s \n",product_type,station,choosen_dist$decision))
}
excel
write.xlsx(excel,"Estadisticas_Servidores.xlsx",sheetName = "Resultados - Processing Data",
col.names = TRUE, row.names = FALSE, append = FALSE
)
install.packages("readxl")
require(dplyr)
require(distChoose)
require(EnvStats)
library("fitdistrplus")
library("xlsx")
library("readxl")
raw_data = read_excel("DataFile.xlsx", sheet = "Quality Data")
raw_data
time = raw_data$`Inspection End` - raw_data$`Inspection Start`
time
raw_data = read_excel("DataFile.xlsx", sheet = "Quality Data")
raw_data$Time = raw_data$`Inspection End` - raw_data$`Inspection Start`
raw_data
raw_data$Time
datos = na.omit(raw_data)
datos
products_and_stations = datos[,c("Material","Supplier")]
nrows(products_and_stations)
print(nrow(products_and_stations))
print(nrow(raw_data))
View(products_and_stations)
products_and_stations
raw_data = read_excel("DataFile.xlsx", sheet = "Quality Data")
raw_data$Time = raw_data$`Inspection End` - raw_data$`Inspection Start`
datos = na.omit(raw_data)
materials_and_suppliers = datos[,c("Material","Supplier")]
print(nrow(materials_and_suppliers))
unique_pairs = materials_and_suppliers %>% distinct(Material,Supplier)
print(nrow(unique_pairs))
raw_data = read_excel("DataFile.xlsx", sheet = "Quality Data")
raw_data$Time = raw_data$`Inspection End` - raw_data$`Inspection Start`
datos = na.omit(raw_data)
materials_and_suppliers = datos[,c("Material","Supplier")]
print(nrow(materials_and_suppliers))
unique_pairs = materials_and_suppliers %>% distinct(Material,Supplier)
print(nrow(unique_pairs))
distributions = c("norm","gamma", "weibull")
names(distributions) = c("Normal","Gamma","Weibull")
excel <- matrix(, nrow = nrow(unique_pairs) , ncol = 7)
colnames(excel) <- c("Material","Supplier","Distribucion","Val1Name","Val1","Val2Name","Val2")
unique_pairs
require(dplyr)
require(distChoose)
require(EnvStats)
library("fitdistrplus")
library("xlsx")
library("readxl")
raw_data = read_excel("DataFile.xlsx", sheet = "Quality Data")
raw_data$Time = raw_data$`Inspection End` - raw_data$`Inspection Start`
datos = na.omit(raw_data)
materials_and_suppliers = datos[,c("Material","Supplier")]
print(nrow(materials_and_suppliers))
unique_pairs = materials_and_suppliers %>% distinct(Material,Supplier)
print(nrow(unique_pairs))
distributions = c("norm","gamma", "weibull")
names(distributions) = c("Normal","Gamma","Weibull")
excel <- matrix(, nrow = nrow(unique_pairs) , ncol = 7)
colnames(excel) <- c("Material","Supplier","Distribucion","Val1Name","Val1","Val2Name","Val2")
unique_pairs
require(dplyr)
require(distChoose)
require(EnvStats)
library("fitdistrplus")
library("xlsx")
library("readxl")
raw_data = read_excel("DataFile.xlsx", sheet = "Quality Data")
raw_data$Time = raw_data$`Inspection End` - raw_data$`Inspection Start`
datos = na.omit(raw_data)
materials_and_suppliers = datos[,c("Material","Supplier")]
print(nrow(materials_and_suppliers))
unique_pairs = materials_and_suppliers %>% distinct(Material,Supplier)
print(nrow(unique_pairs))
distributions = c("norm","gamma", "weibull")
names(distributions) = c("Normal","Gamma","Weibull")
excel <- matrix(, nrow = nrow(unique_pairs) , ncol = 7)
colnames(excel) <- c("Material","Supplier","Distribucion","Val1Name","Val1","Val2Name","Val2")
unique_pairs
for(i in 1:dim(unique_pairs)[1]){
material =  unique_pairs[i,1]
supplier = unique_pairs[i,2]
pair_values =  filter(datos, Material == material & Supplier== supplier )
choosen_dist <- distChoose(pair_values$Time, alpha = 0.05, method = "sw",
choices = c("gamma","weibull","norm"), est.arg.list = NULL,
warn= TRUE, keep.data = TRUE, data.name = NULL,
parent.of.data = NULL, subset.expression = NULL)
if(choosen_dist$decision=="Nonparametric"){
choosen_dist$decision="Normal"
}
dist_name = distributions[[choosen_dist$decision]]
valor_de_ajuste <- fitdist(pair_values$Time,dist_name)
excel[i,1] <- sprintf( "%s", material)
excel[i,2] <- sprintf( "%s", supplier)
excel[i,3] <- choosen_dist$decision
excel[i,4] <- names(valor_de_ajuste[[1]][1])
excel[i,5] <- valor_de_ajuste[[1]][1]
excel[i,6] <- names(valor_de_ajuste[[1]][2])
excel[i,7] <- valor_de_ajuste[[1]][2]
#cat(sprintf("Preja %s - %s => %s \n",product_type,station,choosen_dist$decision))
}
write.xlsx(excel,"Estadisticas_QualityData.xlsx",sheetName = "Resultados - Processing Data",
col.names = TRUE, row.names = FALSE, append = FALSE)
require(dplyr)
require(distChoose)
require(EnvStats)
library("fitdistrplus")
library("xlsx")
library("readxl")
raw_data = read_excel("DataFile.xlsx", sheet = "Quality Data")
raw_data$Time = raw_data$`Inspection End` - raw_data$`Inspection Start`
datos = na.omit(raw_data)
materials_and_suppliers = datos[,c("Material","Supplier")]
print(nrow(materials_and_suppliers))
unique_pairs = materials_and_suppliers %>% distinct(Material,Supplier)
print(nrow(unique_pairs))
distributions = c("norm","gamma", "weibull")
names(distributions) = c("Normal","Gamma","Weibull")
excel <- matrix(, nrow = nrow(unique_pairs) , ncol = 7)
colnames(excel) <- c("Material","Supplier","Distribucion","Val1Name","Val1","Val2Name","Val2")
unique_pairs
datos$Time
for(i in 1:dim(unique_pairs)[1]){
material =  unique_pairs[i,1]
supplier = unique_pairs[i,2]
pair_values =  filter(datos, Material == material & Supplier== supplier )
choosen_dist <- distChoose(pair_values$Time, alpha = 0.05, method = "sw",
choices = c("gamma","weibull","norm"), est.arg.list = NULL,
warn= TRUE, keep.data = TRUE, data.name = NULL,
parent.of.data = NULL, subset.expression = NULL)
if(choosen_dist$decision=="Nonparametric"){
choosen_dist$decision="Normal"
}
dist_name = distributions[[choosen_dist$decision]]
valor_de_ajuste <- fitdist(pair_values$Time,dist_name)
excel[i,1] <- sprintf( "%s", material)
excel[i,2] <- sprintf( "%s", supplier)
excel[i,3] <- choosen_dist$decision
excel[i,4] <- names(valor_de_ajuste[[1]][1])
excel[i,5] <- valor_de_ajuste[[1]][1]
excel[i,6] <- names(valor_de_ajuste[[1]][2])
excel[i,7] <- valor_de_ajuste[[1]][2]
cat(sprintf("Preja %s - %s => %s \n",product_type,station,choosen_dist$decision))
}
dist_name
pair_values$Tim
pair_values$Time
time = as.numeric( pair_values$Time )
time
raw_data = read_excel("DataFile.xlsx", sheet = "Quality Data")
raw_data$Time = as.numeric( raw_data$`Inspection End` - raw_data$`Inspection Start` )
datos = na.omit(raw_data)
materials_and_suppliers = datos[,c("Material","Supplier")]
print(nrow(materials_and_suppliers))
unique_pairs = materials_and_suppliers %>% distinct(Material,Supplier)
print(nrow(unique_pairs))
distributions = c("norm","gamma", "weibull")
names(distributions) = c("Normal","Gamma","Weibull")
excel <- matrix(, nrow = nrow(unique_pairs) , ncol = 7)
colnames(excel) <- c("Material","Supplier","Distribucion","Val1Name","Val1","Val2Name","Val2")
unique_pairs
for(i in 1:dim(unique_pairs)[1]){
material =  unique_pairs[i,1]
supplier = unique_pairs[i,2]
pair_values =  filter(datos, Material == material & Supplier== supplier )
choosen_dist <- distChoose(pair_values$Time, alpha = 0.05, method = "sw",
choices = c("gamma","weibull","norm"), est.arg.list = NULL,
warn= TRUE, keep.data = TRUE, data.name = NULL,
parent.of.data = NULL, subset.expression = NULL)
if(choosen_dist$decision=="Nonparametric"){
choosen_dist$decision="Normal"
}
dist_name = distributions[[choosen_dist$decision]]
valor_de_ajuste <- fitdist(pair_values$Time,dist_name)
excel[i,1] <- sprintf( "%s", material)
excel[i,2] <- sprintf( "%s", supplier)
excel[i,3] <- choosen_dist$decision
excel[i,4] <- names(valor_de_ajuste[[1]][1])
excel[i,5] <- valor_de_ajuste[[1]][1]
excel[i,6] <- names(valor_de_ajuste[[1]][2])
excel[i,7] <- valor_de_ajuste[[1]][2]
cat(sprintf("Preja %s - %s => %s \n",product_type,station,choosen_dist$decision))
}
raw_data = read_excel("DataFile.xlsx", sheet = "Quality Data")
raw_data$Time = as.numeric( raw_data$`Inspection End` - raw_data$`Inspection Start` )
datos = na.omit(raw_data)
materials_and_suppliers = datos[,c("Material","Supplier")]
print(nrow(materials_and_suppliers))
unique_pairs = materials_and_suppliers %>% distinct(Material,Supplier)
print(nrow(unique_pairs))
distributions = c("norm","gamma", "weibull")
names(distributions) = c("Normal","Gamma","Weibull")
excel <- matrix(, nrow = nrow(unique_pairs) , ncol = 7)
colnames(excel) <- c("Material","Supplier","Distribucion","Val1Name","Val1","Val2Name","Val2")
unique_pairs
for(i in 1:dim(unique_pairs)[1]){
material =  unique_pairs[i,1]
supplier = unique_pairs[i,2]
pair_values =  filter(datos, Material == material & Supplier== supplier )
choosen_dist <- distChoose(pair_values$Time, alpha = 0.05, method = "sw",
choices = c("gamma","weibull","norm"), est.arg.list = NULL,
warn= TRUE, keep.data = TRUE, data.name = NULL,
parent.of.data = NULL, subset.expression = NULL)
if(choosen_dist$decision=="Nonparametric"){
choosen_dist$decision="Normal"
}
dist_name = distributions[[choosen_dist$decision]]
valor_de_ajuste <- fitdist(pair_values$Time,dist_name)
excel[i,1] <- sprintf( "%s", material)
excel[i,2] <- sprintf( "%s", supplier)
excel[i,3] <- choosen_dist$decision
excel[i,4] <- names(valor_de_ajuste[[1]][1])
excel[i,5] <- valor_de_ajuste[[1]][1]
excel[i,6] <- names(valor_de_ajuste[[1]][2])
excel[i,7] <- valor_de_ajuste[[1]][2]
cat(sprintf("Preja %s - %s => %s \n",material,supplier,choosen_dist$decision))
}
unique_pairs
pair_values
unique_pairs
pair_values =  filter(datos, Material == material & Supplier== supplier )
pair_values
raw_data = read_excel("DataFile.xlsx", sheet = "Quality Data")
raw_data$Time = as.numeric( raw_data$`Inspection End` - raw_data$`Inspection Start` )
datos = na.omit(raw_data)
materials_and_suppliers = datos[,c("Material","Supplier")]
print(nrow(materials_and_suppliers))
unique_pairs = materials_and_suppliers %>% distinct(Material,Supplier)
print(nrow(unique_pairs))
distributions = c("norm","gamma", "weibull")
names(distributions) = c("Normal","Gamma","Weibull")
excel <- matrix(, nrow = nrow(unique_pairs) , ncol = 7)
colnames(excel) <- c("Material","Supplier","Distribucion","Val1Name","Val1","Val2Name","Val2")
require(dplyr)
require(distChoose)
require(EnvStats)
library("fitdistrplus")
library("xlsx")
library("readxl")
for(i in 1:dim(unique_pairs)[1]){
material =  unique_pairs[i,1]
supplier = unique_pairs[i,2]
pair_values =  filter(datos, Material == material & Supplier== supplier )
choosen_dist <- distChoose(pair_values$Time, alpha = 0.05, method = "sw",
choices = c("gamma","weibull","norm"), est.arg.list = NULL,
warn= TRUE, keep.data = TRUE, data.name = NULL,
parent.of.data = NULL, subset.expression = NULL)
if(choosen_dist$decision=="Nonparametric"){
choosen_dist$decision="Normal"
}
dist_name = distributions[[choosen_dist$decision]]
valor_de_ajuste <- fitdist(pair_values$Time,dist_name)
excel[i,1] <- sprintf( "%s", material)
excel[i,2] <- sprintf( "%s", supplier)
excel[i,3] <- choosen_dist$decision
excel[i,4] <- names(valor_de_ajuste[[1]][1])
excel[i,5] <- valor_de_ajuste[[1]][1]
excel[i,6] <- names(valor_de_ajuste[[1]][2])
excel[i,7] <- valor_de_ajuste[[1]][2]
cat(sprintf("Preja %s - %s => %s \n",material,supplier,choosen_dist$decision))
}
require(dplyr)
require(distChoose)
require(EnvStats)
library("fitdistrplus")
library("xlsx")
library("readxl")
raw_data = read_excel("DataFile.xlsx", sheet = "Quality Data")
raw_data$Time = raw_data$`Inspection End` - raw_data$`Inspection Start`
datos = na.omit(raw_data)
datos$Time = as.numeric(datos$Time)
materials_and_suppliers = datos[,c("Material","Supplier")]
print(nrow(materials_and_suppliers))
unique_pairs = materials_and_suppliers %>% distinct(Material,Supplier)
print(nrow(unique_pairs))
distributions = c("norm","gamma", "weibull")
names(distributions) = c("Normal","Gamma","Weibull")
excel <- matrix(, nrow = nrow(unique_pairs) , ncol = 7)
colnames(excel) <- c("Material","Supplier","Distribucion","Val1Name","Val1","Val2Name","Val2")
for(i in 1:dim(unique_pairs)[1]){
material =  unique_pairs[i,1]
supplier = unique_pairs[i,2]
pair_values =  filter(datos, Material == material & Supplier== supplier )
choosen_dist <- distChoose(pair_values$Time, alpha = 0.05, method = "sw",
choices = c("gamma","weibull","norm"), est.arg.list = NULL,
warn= TRUE, keep.data = TRUE, data.name = NULL,
parent.of.data = NULL, subset.expression = NULL)
if(choosen_dist$decision=="Nonparametric"){
choosen_dist$decision="Normal"
}
dist_name = distributions[[choosen_dist$decision]]
valor_de_ajuste <- fitdist(pair_values$Time,dist_name)
excel[i,1] <- sprintf( "%s", material)
excel[i,2] <- sprintf( "%s", supplier)
excel[i,3] <- choosen_dist$decision
excel[i,4] <- names(valor_de_ajuste[[1]][1])
excel[i,5] <- valor_de_ajuste[[1]][1]
excel[i,6] <- names(valor_de_ajuste[[1]][2])
excel[i,7] <- valor_de_ajuste[[1]][2]
cat(sprintf("Preja %s - %s => %s \n",material,supplier,choosen_dist$decision))
}
typeof(datos$Time)
typeof(datos$Time)
datos$Time
raw_data = read_excel("DataFile.xlsx", sheet = "Quality Data")
raw_data$Time = raw_data$`Inspection End` - raw_data$`Inspection Start`
datos = na.omit(raw_data)
datos$Time = as.numeric(datos$Time)
materials_and_suppliers = datos[,c("Material","Supplier")]
print(nrow(materials_and_suppliers))
unique_pairs = materials_and_suppliers %>% distinct(Material,Supplier)
print(nrow(unique_pairs))
distributions = c("norm","gamma", "weibull")
names(distributions) = c("Normal","Gamma","Weibull")
excel <- matrix(, nrow = nrow(unique_pairs) , ncol = 7)
colnames(excel) <- c("Material","Supplier","Distribucion","Val1Name","Val1","Val2Name","Val2")
for(i in 1:dim(unique_pairs)[1]){
material =  unique_pairs[i,1]
supplier = unique_pairs[i,2]
pair_values =  filter(datos$Time, Material == material & Supplier== supplier )
choosen_dist <- distChoose(pair_values$Time, alpha = 0.05, method = "sw",
choices = c("gamma","weibull","norm"), est.arg.list = NULL,
warn= TRUE, keep.data = TRUE, data.name = NULL,
parent.of.data = NULL, subset.expression = NULL)
if(choosen_dist$decision=="Nonparametric"){
choosen_dist$decision="Normal"
}
dist_name = distributions[[choosen_dist$decision]]
valor_de_ajuste <- fitdist(pair_values$Time,dist_name)
excel[i,1] <- sprintf( "%s", material)
excel[i,2] <- sprintf( "%s", supplier)
excel[i,3] <- choosen_dist$decision
excel[i,4] <- names(valor_de_ajuste[[1]][1])
excel[i,5] <- valor_de_ajuste[[1]][1]
excel[i,6] <- names(valor_de_ajuste[[1]][2])
excel[i,7] <- valor_de_ajuste[[1]][2]
cat(sprintf("Preja %s - %s => %s \n",material,supplier,choosen_dist$decision))
}
material =  unique_pairs[i,1]
supplier = unique_pairs[i,2]
pair_values =  filter(datos, Material == material & Supplier== supplier )
pair_values
pair_values =  filter(datos, Material == material & Supplier== supplier )
pair_values$Time
choosen_dist <- distChoose(pair_values$Time, alpha = 0.05, method = "sw",
choices = c("gamma","weibull","norm"), est.arg.list = NULL,
warn= TRUE, keep.data = TRUE, data.name = NULL,
parent.of.data = NULL, subset.expression = NULL)
if(choosen_dist$decision=="Nonparametric"){
choosen_dist$decision="Normal"
}
dist_name = distributions[[choosen_dist$decision]]
valor_de_ajuste <- fitdist(pair_values$Time,dist_name)
excel[i,1] <- sprintf( "%s", material)
excel[i,2] <- sprintf( "%s", supplier)
excel[i,3] <- choosen_dist$decision
excel[i,4] <- names(valor_de_ajuste[[1]][1])
excel[i,5] <- valor_de_ajuste[[1]][1]
excel[i,6] <- names(valor_de_ajuste[[1]][2])
excel[i,7] <- valor_de_ajuste[[1]][2]
cat(sprintf("Preja %s - %s => %s \n",material,supplier,choosen_dist$decision))
i = i + 1
material =  unique_pairs[i,1]
supplier = unique_pairs[i,2]
pair_values =  filter(datos, Material == material & Supplier== supplier )
pair_values$Time
material
supplier
pair_values
datos
pair_values =  filter(datos, Material == material & Supplier== supplier )
pair_values
material
supplier
require(dplyr)
require(distChoose)
require(EnvStats)
library("fitdistrplus")
library("xlsx")
library("readxl")
raw_data = read_excel("DataFile.xlsx", sheet = "Quality Data")
raw_data$Time = raw_data$`Inspection End` - raw_data$`Inspection Start`
datos = na.omit(raw_data)
datos$Time = as.numeric(datos$Time)
materials_and_suppliers = datos[,c("Material","Supplier")]
print(nrow(materials_and_suppliers))
unique_pairs = materials_and_suppliers %>% distinct(Material,Supplier)
print(nrow(unique_pairs))
distributions = c("norm","gamma", "weibull")
names(distributions) = c("Normal","Gamma","Weibull")
excel <- matrix(, nrow = nrow(unique_pairs) , ncol = 7)
colnames(excel) <- c("Material","Supplier","Distribucion","Val1Name","Val1","Val2Name","Val2")
i = 1
material =  unique_pairs[i,1]
supplier = unique_pairs[i,2]
material
supplier
pair_values =  filter(datos, Material == material & Supplier== supplier )
pair_values
datos
mat =  unique_pairs[i,1]
sup = unique_pairs[i,2]
pair_values =  filter(datos, Material == mat & Supplier== sup )
pair_values
pair_values =  filter(datos, `Material` == mat & `Supplier`== sup )
pair_values
mat
mat[1]
mat[0]
mat[1]
mat[1]p1
mat[1][1]
pair_values =  filter(datos, `Material` == mat & `Supplier`== sup )
pair_values =  filter(datos, Material == material & Supplier== supplier )
pair_values
raw_data = read.xlsx("DataFile.xlsx", 7, header=TRUE)
raw_data
raw_data = read.xlsx("DataFile.xlsx", 6, header=TRUE)
raw_data
raw_data$Time = raw_data$`Inspection End` - raw_data$`Inspection Start`
raw_data
raw_data$Time = raw_data$Inspection.End - raw_data$Inspection.Start
raw_data$Time
datos = na.omit(raw_data)
datos$Time = as.numeric(datos$Time)
raw_data = read.xlsx("DataFile.xlsx", 6, header=TRUE)
raw_data$Time = raw_data$Inspection.End - raw_data$Inspection.Start
datos = na.omit(raw_data)
datos$Time = as.numeric(datos$Time)
materials_and_suppliers = datos[,c("Material","Supplier")]
print(nrow(materials_and_suppliers))
unique_pairs = materials_and_suppliers %>% distinct(Material,Supplier)
print(nrow(unique_pairs))
distributions = c("norm","gamma", "weibull")
names(distributions) = c("Normal","Gamma","Weibull")
excel <- matrix(, nrow = nrow(unique_pairs) , ncol = 7)
colnames(excel) <- c("Material","Supplier","Distribucion","Val1Name","Val1","Val2Name","Val2")
datos
unique_pairs
for(i in 1:dim(unique_pairs)[1]){
material =  unique_pairs[i,1]
supplier = unique_pairs[i,2]
pair_values =  filter(datos, Material == material & Supplier== supplier )
choosen_dist <- distChoose(pair_values$Time, alpha = 0.05, method = "sw",
choices = c("gamma","weibull","norm"), est.arg.list = NULL,
warn= TRUE, keep.data = TRUE, data.name = NULL,
parent.of.data = NULL, subset.expression = NULL)
if(choosen_dist$decision=="Nonparametric"){
choosen_dist$decision="Normal"
}
dist_name = distributions[[choosen_dist$decision]]
valor_de_ajuste <- fitdist(pair_values$Time,dist_name)
excel[i,1] <- sprintf( "%s", material)
excel[i,2] <- sprintf( "%s", supplier)
excel[i,3] <- choosen_dist$decision
excel[i,4] <- names(valor_de_ajuste[[1]][1])
excel[i,5] <- valor_de_ajuste[[1]][1]
excel[i,6] <- names(valor_de_ajuste[[1]][2])
excel[i,7] <- valor_de_ajuste[[1]][2]
cat(sprintf("Preja %s - %s => %s \n",material,supplier,choosen_dist$decision))
}
write.xlsx(excel,"Estadisticas_QualityData.xlsx",sheetName = "Resultados - Processing Data",
col.names = TRUE, row.names = FALSE, append = FALSE)
